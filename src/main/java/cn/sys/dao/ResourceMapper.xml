<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sys.dao.ResourceMapper" >

    <resultMap id="BaseResultMap" type="cn.sys.entity.Resource" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="des" property="des" jdbcType="VARCHAR" />
        <result column="unit_price" property="unit_price" jdbcType="DECIMAL" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="surplus" property="surplus" jdbcType="BIGINT" />
        <result column="cid" property="cid" jdbcType="INTEGER" />
        <result column="bak1" property="bak1" jdbcType="VARCHAR" />
        <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, name, des, unit_price, unit, surplus, cid, bak1, bak2
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.sys.entity.ResourceExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from resource
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from resource
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from resource
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="cn.sys.entity.ResourceExample" >
        delete from resource
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="cn.sys.entity.Resource" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into resource (name, des, unit_price, 
            unit, surplus, cid, 
            bak1, bak2)
        values (#{name,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, #{unit_price,jdbcType=DECIMAL}, 
            #{unit,jdbcType=VARCHAR}, #{surplus,jdbcType=BIGINT}, #{cid,jdbcType=INTEGER}, 
            #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="cn.sys.entity.Resource" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into resource
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                name,
            </if>
            <if test="des != null" >
                des,
            </if>
            <if test="unit_price != null" >
                unit_price,
            </if>
            <if test="unit != null" >
                unit,
            </if>
            <if test="surplus != null" >
                surplus,
            </if>
            <if test="cid != null" >
                cid,
            </if>
            <if test="bak1 != null" >
                bak1,
            </if>
            <if test="bak2 != null" >
                bak2,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="des != null" >
                #{des,jdbcType=VARCHAR},
            </if>
            <if test="unit_price != null" >
                #{unit_price,jdbcType=DECIMAL},
            </if>
            <if test="unit != null" >
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="surplus != null" >
                #{surplus,jdbcType=BIGINT},
            </if>
            <if test="cid != null" >
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="bak1 != null" >
                #{bak1,jdbcType=VARCHAR},
            </if>
            <if test="bak2 != null" >
                #{bak2,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="cn.sys.entity.ResourceExample" resultType="java.lang.Integer" >
        select count(*) from resource
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update resource
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.des != null" >
                des = #{record.des,jdbcType=VARCHAR},
            </if>
            <if test="record.unit_price != null" >
                unit_price = #{record.unit_price,jdbcType=DECIMAL},
            </if>
            <if test="record.unit != null" >
                unit = #{record.unit,jdbcType=VARCHAR},
            </if>
            <if test="record.surplus != null" >
                surplus = #{record.surplus,jdbcType=BIGINT},
            </if>
            <if test="record.cid != null" >
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.bak1 != null" >
                bak1 = #{record.bak1,jdbcType=VARCHAR},
            </if>
            <if test="record.bak2 != null" >
                bak2 = #{record.bak2,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update resource
        set id = #{record.id,jdbcType=INTEGER},
            name = #{record.name,jdbcType=VARCHAR},
            des = #{record.des,jdbcType=VARCHAR},
            unit_price = #{record.unit_price,jdbcType=DECIMAL},
            unit = #{record.unit,jdbcType=VARCHAR},
            surplus = #{record.surplus,jdbcType=BIGINT},
            cid = #{record.cid,jdbcType=INTEGER},
            bak1 = #{record.bak1,jdbcType=VARCHAR},
            bak2 = #{record.bak2,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="cn.sys.entity.Resource" >
        update resource
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="des != null" >
                des = #{des,jdbcType=VARCHAR},
            </if>
            <if test="unit_price != null" >
                unit_price = #{unit_price,jdbcType=DECIMAL},
            </if>
            <if test="unit != null" >
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="surplus != null" >
                surplus = #{surplus,jdbcType=BIGINT},
            </if>
            <if test="cid != null" >
                cid = #{cid,jdbcType=INTEGER},
            </if>
            <if test="bak1 != null" >
                bak1 = #{bak1,jdbcType=VARCHAR},
            </if>
            <if test="bak2 != null" >
                bak2 = #{bak2,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.sys.entity.Resource" >
        update resource
        set name = #{name,jdbcType=VARCHAR},
            des = #{des,jdbcType=VARCHAR},
            unit_price = #{unit_price,jdbcType=DECIMAL},
            unit = #{unit,jdbcType=VARCHAR},
            surplus = #{surplus,jdbcType=BIGINT},
            cid = #{cid,jdbcType=INTEGER},
            bak1 = #{bak1,jdbcType=VARCHAR},
            bak2 = #{bak2,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>